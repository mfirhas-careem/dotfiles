# Documentation at https://dystroy.org/broot/verbs/

verbs: [
    # Edit file in editor(helix)
    {
        invocation: edit
        shortcut: e
        key: ctrl-e
        apply_to: text_file
        external: "$BROOT_EDITOR {file}:{line}"
        leave_broot: false
    }
   
    # Open directory in editor(helix)
    {
        key: alt-e
        apply_to: directory
        external: "$BROOT_EDITOR {directory}"
        leave_broot: false
    }

    {
        name: vscode
        invocation: vscode
        external: "code {directory}"
        from_shell: true # use 'from_shell' if we run something from shell script, not binary/executable 
    }
    
    # Open directory in gitui
    {
        name: gitui
        invocation: gitui
        apply_to: directory
        external: "gitui -d {directory}"
        leave_broot: false
    }

    # Open in lazydocker
    {
        name: lazydocker
        invocation: lazydocker
        apply_to: text_file
        external: "lazydocker"
        leave_broot: false
    }
    
    # Open in vim
    {
        name: vim
        invocation: vim
        apply_to: text_file
        external: "vim {file}"
        leave_broot: false
    }

    # Open directory in nvim
    {
        name: nvim
        invocation: nvim
        apply_to: directory
        external: "nvim {directory}"
        leave_broot: false
    }
    ### (END) Open in app

    # Launching `tail -n` on the selected file (leaving broot)
    {
        name: tail_lines
        invocation: tail {lines_count}
        execution: "tail -f -n {lines_count} {file}"
    }

    # Creating a new file without leaving broot
    {
        name: touch
        invocation: touch {new_file}
        execution: "touch {directory}/{new_file}"
        leave_broot: false
    }

    # A convenient shortcut to create new text files in
    #  the current directory or below
    # it opens editor on that new file, and changes must made and saved in order to take effect
    {
        invocation: new {subpath}
        execution: "$BROOT_EDITOR {directory}/{subpath}"
        leave_broot: false
    }

    # git diff on selected file
    {
        invocation: git_diff
        shortcut: gd
        leave_broot: false
        execution: "git difftool -y {file}"
    }

    # override ctrl-Right & ctrl-Left, because already occupied by mac's fullscreen switch windows
    {
        key: alt-Right
        execution: ":panel_right"
    }

    {
        key: alt-Left
        execution: ":panel_left_no_open"
    }

    # Refresh ui state of outside changes
    {
        key: ctrl-r
        execution: ":refresh"
    }

    # Toggle preview on the right side
    {
        key: alt-p
        execution: ":toggle_preview"
    }

    # On ctrl-b, propose the creation of a copy of the selection.
    # While this might occasionally be useful, this verb is mostly here
    # as an example to demonstrate rare standard groups like {file-stem}
    # and {file-dot-extension} and the auto_exec verb property which
    # allows verbs to stay unexecuted until you hit enter
    #{
    #    invocation: "backup {version}"
    #    key: ctrl-b
    #    leave_broot: false
    #    auto_exec: false
    #    execution: "cp -r {file} {parent}/{file-stem}-{version}{file-dot-extension}"
    #}
    
    # This verb lets you launch a terminal on ctrl-T
    # (on exit you'll be back in broot)
    {
        invocation: terminal
        key: ctrl-t
        execution: "$SHELL"
        set_working_dir: true
        leave_broot: false
    }

    # Toggle tree view
    {
        invocation: toggle_tree
        key: alt-t
        execution: ":toggle_tree"
        leave_broot: false
    }

    # Here's an example of a verb needing the shell capabilities.
    # It copies all children of the currently selected directory
    #  to a destination you type.
    # It uses a star, which needs the shell for expansion. That's
    #  why such verb must have the `from_shell: true` parameter.
    {
        invocation: "cpa {dest}"
        external: "cp -r {directory}/* {dest}"
        from_shell: true
    }

    # Here's an example of a shortcut bringing you to your home directory
    # {
    #     invocation: home
    #     key: ctrl-home
    #     execution: ":focus ~"
    # }
    
    {
        key: ctrl-u
        execution: ":page_up"
    }
    {
        key: ctrl-d
        execution: ":page_down"
    }

    # If you develop using git, you might like to often switch
    # to the git status filter:
    {
        key: alt-g
        execution: ":toggle_git_status"
    }
    
]

