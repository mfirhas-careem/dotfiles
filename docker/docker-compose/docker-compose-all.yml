version: '3.1'

services:
    redis:
        image: redis:latest
        container_name: redis
        # command: redis-server --requirepass password_here # for redis password
        # restart: always
        environment: 
            - ALLOW_EMPTY_PASSWORD=yes
        ports:
            - 6379:6379

    # kafka
    # https://medium.com/better-programming/your-local-event-driven-environment-using-dockerised-kafka-cluster-6e84af09cd95
    # create new topics: get into kafka and run command:
    # kafka-topics --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 2 --topic <topic_name>
    # 
    # list topics: get into kafka and run command:
    # kafka-topics --list --bootstrap-server localhost:9092
    # 
    # describe topic:
    # kafka-topics --describe --bootstrap-server localhost:9092 --topic <topic_name>
    # 
    # consuming topic:
    # kafka-console-consumer --bootstrap-server localhost:9092 --from-beginning --topic <topic_name> --property "print.key=true"
    zookeeper:
        image: confluentinc/cp-zookeeper:5.4.0
        hostname: zookeeper
        container_name: zookeeper
        ports:
            - 2181:2181
        environment:
            - ZOOKEEPER_CLIENT_PORT=2181
            - ZOOKEEPER_TICK_TIME=2000 

    kafka-server:
        image: confluentinc/cp-server:5.4.0
        hostname: kafka-server
        container_name: kafka-server
        depends_on:
            - zookeeper
        ports:
            - 9092:9092
        environment:
            - KAFKA_BROKER_ID=1
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka-server:29092,PLAINTEXT_HOST://localhost:9092
            - KAFKA_METRIC_REPORTERS=io.confluent.metrics.reporter.ConfluentMetricsReporter
            - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
            - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
            - KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR=1
            - CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS=kafka-server:29092
            - CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT=zookeeper:2181
            - CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS=1
            - CONFLUENT_METRICS_ENABLE='true'
            - CONFLUENT_SUPPORT_CUSTOMER_ID='anonymous' 

    kafka:
        image: confluentinc/cp-kafka:5.4.0
        hostname: kafka
        container_name: kafka
        command: ["tail", "-f", "/dev/null"]
        network_mode: host
    # kafka end

    rabbitmq:
        image: rabbitmq:3-management
        container_name: rabbitmq
        volumes:
            - /Users/mfathirirhas/.docker/rabbitmq/data/:/var/lib/rabbitmq/
            - /Users/mfathirirhas/.docker/rabbitmq/logs/:/var/log/rabbitmq/
            - /Users/mfathirirhas/.docker/rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins
        environment:
            - RABBITMQ_ERLANG_COOKIE=cluster_cookie
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        ports:
            - 5672:5672
            - 15672:15672

    consul:
        image: consul
        container_name: consul
        ports:
            - 8500:8500
    
    mongodb:
        image: mongo:latest
        container_name: mongodb
        environment: 
            - MONGO_INITDB_ROOT_USERNAME=root
            - MONGO_INITDB_ROOT_PASSWORD=root
            - MONGO_INITDB_DATABASE=local
        volumes: 
            - /data/db
        ports: 
            - 27017:27017

